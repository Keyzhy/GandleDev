// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @unique
  email String
  firstname String
  lastName String
  profileImage String

  orders Order[]

  createdAt DateTime @default(now())
}

model Product {
  id String @id @default(uuid())
  name String
  description String
  status ProductStatus
  parfum String @default("non renseigné")
  composition String @default("non renseigné")
  poids Int @default(0)
  price Int
  images String[]
  stock Int
  category Category
  isFeatured Boolean @default(false)

  createdAt DateTime @default(now())

}

model Banner{
  id String @id @default(uuid())
  title String
  imageString String

  createdAt DateTime @default(now())
}

model Order{
  id String @id @default(uuid())
  status String @default("pending")
  amount Int
  statuscomm OrderStatus @default(nontraite)
  shippingName String @default("non renseigné")
  shippingAdressLine1 String @default("non renseigné")
  shippingAdressLine2 String @default("non renseigné")
  shippingCity String @default("non renseigné")
  shippingPostalCode String @default("non renseigné")
  shippingCountry String  @default("non renseigné")
  shippingOption String @default("non renseigné")

  User User? @relation(fields: [userId],references: [id])
  userId String?

  createdAt DateTime @default(now())
}

enum ProductStatus{
  brouillon
  publie
  archived
}

enum Category{
  bougies
  fondants
  desodorisants
}

enum OrderStatus{
  nontraite
  horsstock
  delaisapporvisionnement
  preparation
  attenteenvoi
  communiquetransporteur
}
